Trial and error is a fundamental method of problem-solving characterized by repeated, varied attempts which are continued until success, or until the practicer stops trying.
According to W.H. Thorpe, the term was devised by C. Lloyd Morgan (1852–1936) after trying out similar phrases "trial and failure" and "trial and practice". Under Morgan's Canon, animal behaviour should be explained in the simplest possible way. Where behavior seems to imply higher mental processes, it might be explained by trial-and-error learning. An example is a skillful way in which his terrier Tony opened the garden gate, easily misunderstood as an insightful act by someone seeing the final behavior. Lloyd Morgan, however, had watched and recorded the series of approximations by which the dog had gradually learned the response, and could demonstrate that no insight was required to explain it.
Edward Lee Thorndike was the initiator of the theory of trial and error learning based on the findings he showed how to manage a trial-and-error experiment in the laboratory. In his famous experiment, a cat was placed in a series of puzzle boxes in order to study the law of effect in learning. He plotted to learn curves which recorded the timing for each trial. Thorndike's key observation was that learning was promoted by positive results, which was later refined and extended by B. F. Skinner's operant conditioning.
Trial and error is also a method of problem solving, repair, tuning, or obtaining knowledge. In the field of computer science, the method is called generate and test (Brute force). In elementary algebra, when solving equations, it is guess and check.
This approach can be seen as one of the two basic approaches to problem-solving, contrasted with an approach using insight and theory. However, there are intermediate methods which for example, use theory to guide the method, an approach known as guided empiricism.
This way of thinking has become a mainstay of Karl Popper's critical rationalism.


== Methodology ==
The trial and error approach is used most successfully with simple problems and in games, and it is often the last resort when no apparent rule applies. This does not mean that the approach is inherently careless, for an individual can be methodical in manipulating the variables in an attempt to sort through possibilities that could result in success. Nevertheless, this method is often used by people who have little knowledge in the problem area. The trial-and-error approach has been studied from its natural computational point of view 


=== Simplest applications ===
Ashby (1960, section 11/5) offers three simple strategies for dealing with the same basic exercise-problem, which have very different efficiencies.  Suppose a collection of 1000 on/off switches have to be set to a particular combination by random-based testing, where each test is expected to take one second. [This is also discussed in Traill (1978–2006, section C1.2]. The strategies are:

the perfectionist all-or-nothing method, with no attempt at holding partial successes. This would be expected to take more than 10^301 seconds, [i.e., 2^1000 seconds, or 3·5×(10^291) centuries]
a serial-test of switches, holding on to the partial successes (assuming that these are manifest), which would take 500 seconds on average
parallel-but-individual testing of all switches simultaneously, which would take only one second
Note the tacit assumption here that no intelligence or insight is brought to bear on the problem. However, the existence of different available strategies allows us to consider a separate ("superior") domain of processing — a "meta-level" above the mechanics of switch handling — where the various available strategies can be randomly chosen. Once again this is "trial and error", but of a different type.


=== Hierarchies ===
Ashby's book develops this "meta-level" idea, and extends it into a whole recursive sequence of levels, successively above each other in a systematic hie